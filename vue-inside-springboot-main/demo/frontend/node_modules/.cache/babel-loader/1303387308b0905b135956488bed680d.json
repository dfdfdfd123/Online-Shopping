{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"로그인\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"아이디:\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호:\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"로그인\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 로그인 모달 \"), $data.showLoginModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.loginData.username = $event),\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.loginData.username]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.loginData.password = $event),\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.loginData.password]])]), _hoisted_8], 32\n  /* HYDRATE_EVENTS */\n  ), $data.showErrorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"아이디나 비밀번호를 입력해주세요.\")) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;AAG6BA,OAAK,EAAC;;;AAC1BA,OAAK,EAAC;;;gCACTC,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO;AAAA;AAAP;;;AAEOD,OAAK,EAAC;;;gCACTC,oBAAkC,OAAlC,EAAkC;AAA3BC,KAAG,EAAC;AAAuB,CAAlC,EAAsB,MAAtB,EAA0B;AAAA;AAA1B;;;AAGGF,OAAK,EAAC;;;gCACTC,oBAAmC,OAAnC,EAAmC;AAA5BC,KAAG,EAAC;AAAwB,CAAnC,EAAsB,OAAtB,EAA2B;AAAA;AAA3B;;gCAGFD,oBAAkC,QAAlC,EAAkC;AAA1BE,MAAI,EAAC;AAAqB,CAAlC,EAAsB,KAAtB,EAAyB;AAAA;AAAzB;;;;AAE2BH,OAAK,EAAC;;;6DAfvCI,iCACWC,sCAAXC,oBAgBM,KAhBN,cAgBM,CAfJL,oBAcM,KAdN,cAcM,CAbJM,UAaI,EAZJN,oBAUO,MAVP,EAUO;AAVAO,YAAM,wDAAUC,yCAAV,EAAe,WAAf;AAUN,GAVP,GACER,oBAGM,KAHN,cAGM,CAFJS,UAEI,kBADJT,oBAAuE,OAAvE,EAAuE;AAAhEE,QAAI,EAAC,MAA2D;AAApDQ,MAAE,EAAC,UAAiD;+DAA7BN,gBAAUO,WAAQC,OAAW;AAATC,YAAQ,EAAR;AAAS,GAAvE;;AAAA,oBAA0CT,gBAAUO,WAChD,CAHN,GAIAX,oBAGM,KAHN,cAGM,CAFJc,UAEI,kBADJd,oBAA2E,OAA3E,EAA2E;AAApEE,QAAI,EAAC,UAA+D;AAApDQ,MAAE,EAAC,UAAiD;+DAA7BN,gBAAUW,WAAQH,OAAW;AAATC,YAAQ,EAAR;AAAS,GAA3E;;AAAA,oBAA8CT,gBAAUW,WACpD,CAHN,GAIAC,WATF;;AAAA,GAYI,EADOZ,wCAAXC,oBAA2E,KAA3E,cAAmD,oBAAnD,sCACI,CAdN,CAeI,CAhBN","names":["class","_createElementVNode","for","type","_createCommentVNode","$data","_createElementBlock","_hoisted_3","onSubmit","$options","_hoisted_5","id","username","$event","required","_hoisted_7","password","_hoisted_8"],"sourceRoot":"","sources":["C:\\Users\\winwi\\Downloads\\vue3\\vue-inside-springboot-main\\demo\\frontend\\src\\views\\LoginForm.vue"],"sourcesContent":["<!-- login.vue -->\r\n<template>\r\n  <!-- 로그인 모달 -->\r\n  <div v-if=\"showLoginModal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <h2>로그인</h2>\r\n      <form @submit.prevent=\"login\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">아이디:</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"loginData.username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">비밀번호:</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"loginData.password\" required>\r\n        </div>\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n      <div v-if=\"showErrorMessage\" class=\"error-message\">아이디나 비밀번호를 입력해주세요.</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  \r\n  data() {\r\n  return {\r\n    isLoggedIn: false,\r\n    showLoginModal: false,\r\n    showErrorMessage: false,\r\n    loginData: {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  };\r\n},\r\n\r\n  methods: {\r\n    login() {\r\n      if (this.loginData.username === '' || this.loginData.password === '') {\r\n        // 아이디나 비밀번호가 입력되지 않은 경우\r\n        this.showErrorMessage = true;\r\n      } else {\r\n        // 로그인 로직을 구현하세요\r\n        // 실제 서버와 통신하여 인증을 처리하거나, 더미 데이터를 사용하셔도 됩니다\r\n        // 예시로는 사용자명과 비밀번호가 'admin'인 경우에 로그인 성공으로 간주하였습니다\r\n        if (this.loginData.username === 'admin' && this.loginData.password === 'admin') \r\n        {\r\n            this.isLoggedIn = true;\r\n            this.username = this.loginData.username;\r\n            this.loginData.username = '';\r\n            this.loginData.password = '';\r\n            this.showLoginModal = false;\r\n            this.showErrorMessage = false;\r\n\r\n            // 로그인 후 메인 페이지로 이동\r\n            this.$router.push({ name: 'home' });\r\n        }\r\n        else {\r\n                   // 로그인 실패 처리\r\n                 this.showErrorMessage = true;\r\n             }\r\n        }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}