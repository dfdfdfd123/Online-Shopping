{"ast":null,"code":"export default {\n  name: \"Login\",\n  methods: {\n    login() {\n      if (this.loginData.username === '' || this.loginData.password === '') {\n        // 아이디나 비밀번호가 입력되지 않은 경우\n        this.showErrorMessage = true;\n      } else {\n        // 로그인 로직을 구현하세요\n        // 실제 서버와 통신하여 인증을 처리하거나, 더미 데이터를 사용하셔도 됩니다\n        // 예시로는 사용자명과 비밀번호가 'admin'인 경우에 로그인 성공으로 간주하였습니다\n        if (this.loginData.username === 'admin' && this.loginData.password === 'admin') {\n          this.isLoggedIn = true;\n          this.username = this.loginData.username;\n          this.loginData.username = '';\n          this.loginData.password = '';\n          this.showLoginModal = false;\n          this.showErrorMessage = false; // 로그인 후 메인 페이지로 이동\n\n          this.$router.push('/home');\n        } else {\n          // 로그인 실패 처리\n          this.showErrorMessage = true;\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuBA,eAAe;AACbA,MAAI,EAAE,OADO;AAGbC,SAAO,EAAE;AACPC,SAAK,GAAG;AACN,UAAI,KAAKC,SAAL,CAAeC,QAAf,KAA4B,EAA5B,IAAkC,KAAKD,SAAL,CAAeE,QAAf,KAA4B,EAAlE,EAAsE;AACpE;AACA,aAAKC,gBAAL,GAAwB,IAAxB;AACF,OAHA,MAGO;AACL;AACA;AACA;AACA,YAAI,KAAKH,SAAL,CAAeC,QAAf,KAA4B,OAA5B,IAAuC,KAAKD,SAAL,CAAeE,QAAf,KAA4B,OAAvE,EAAgF;AAC9E,eAAKE,UAAL,GAAkB,IAAlB;AACA,eAAKH,QAAL,GAAgB,KAAKD,SAAL,CAAeC,QAA/B;AACA,eAAKD,SAAL,CAAeC,QAAf,GAA0B,EAA1B;AACA,eAAKD,SAAL,CAAeE,QAAf,GAA0B,EAA1B;AACA,eAAKG,cAAL,GAAsB,KAAtB;AACA,eAAKF,gBAAL,GAAwB,KAAxB,CAN8E,CAQ9E;;AACA,eAAKG,OAAL,CAAaC,IAAb,CAAkB,OAAlB;AACF,SAVA,MAUO;AACL;AACA,eAAKJ,gBAAL,GAAwB,IAAxB;AACF;AACF;AACF;;AAxBO;AAHI,CAAf","names":["name","methods","login","loginData","username","password","showErrorMessage","isLoggedIn","showLoginModal","$router","push"],"sourceRoot":"","sources":["C:\\Users\\winwi\\Downloads\\vue3\\vue-inside-springboot-main\\demo\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<!-- login.vue -->\r\n<template>\r\n  <!-- 로그인 모달 -->\r\n  <div v-if=\"showLoginModal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <h2>로그인</h2>\r\n      <form @submit.prevent=\"login\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">아이디:</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"loginData.username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">비밀번호:</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"loginData.password\" required>\r\n        </div>\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n      <div v-if=\"showErrorMessage\" class=\"error-message\">아이디나 비밀번호를 입력해주세요.</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  \r\n  methods: {\r\n    login() {\r\n      if (this.loginData.username === '' || this.loginData.password === '') {\r\n        // 아이디나 비밀번호가 입력되지 않은 경우\r\n        this.showErrorMessage = true;\r\n      } else {\r\n        // 로그인 로직을 구현하세요\r\n        // 실제 서버와 통신하여 인증을 처리하거나, 더미 데이터를 사용하셔도 됩니다\r\n        // 예시로는 사용자명과 비밀번호가 'admin'인 경우에 로그인 성공으로 간주하였습니다\r\n        if (this.loginData.username === 'admin' && this.loginData.password === 'admin') {\r\n          this.isLoggedIn = true;\r\n          this.username = this.loginData.username;\r\n          this.loginData.username = '';\r\n          this.loginData.password = '';\r\n          this.showLoginModal = false;\r\n          this.showErrorMessage = false;\r\n\r\n          // 로그인 후 메인 페이지로 이동\r\n          this.$router.push('/home');\r\n        } else {\r\n          // 로그인 실패 처리\r\n          this.showErrorMessage = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}