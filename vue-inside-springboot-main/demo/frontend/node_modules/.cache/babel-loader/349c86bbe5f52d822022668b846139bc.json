{"ast":null,"code":"export default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      email: '',\n      name: '',\n      phone: '',\n      gender: '',\n      agreements: [{\n        id: 'ageAgreement',\n        label: '[필수] 만 14세 이상입니다',\n        checked: false,\n        required: true\n      }, {\n        id: 'shoppingAgreement',\n        label: '[필수] Shopping 이용약관 동의',\n        checked: false,\n        required: true\n      }, {\n        id: 'financialAgreement',\n        label: '[필수] 전자금융거래 이용약관 동의',\n        checked: false,\n        required: true\n      }, {\n        id: 'personalInfoCollection',\n        label: '[필수] 개인정보 수집 및 이용 동의',\n        checked: false,\n        required: true\n      }, {\n        id: 'thirdPartyProvision',\n        label: '[필수] 개인정보 제3자 제공 동의',\n        checked: false,\n        required: true\n      }, {\n        id: 'marketingAgreement',\n        label: '[선택] 마케팅 목적의 개인정보 수집 및 이용 동의',\n        checked: false,\n        required: false\n      }, {\n        id: 'advertisingAgreement',\n        label: '[선택] 광고성 정보 수신 동의',\n        checked: false,\n        required: false\n      }, {\n        id: 'emailAgreement',\n        label: '[선택] 이메일 수신 동의',\n        checked: false,\n        required: false\n      }, {\n        id: 'smsAgreement',\n        label: '[선택] SMS, SNS 수신 동의',\n        checked: false,\n        required: false\n      }, {\n        id: 'pushAgreement',\n        label: '[선택] 앱 푸시 수신 동의',\n        checked: false,\n        required: false\n      }],\n      allAgreements: false\n    };\n  },\n\n  methods: {\n    registerUser() {\n      // Vue에서 Spring Boot로 데이터 전송\n      const saveData = {\n        username: this.username,\n        password: this.password,\n        name: this.name,\n        phone: this.phone,\n        gender: this.gender,\n        email: this.email\n      };\n\n      try {\n        this.$axios.post(\"/signup\", JSON.stringify(saveData), {\n          headers: {\n            \"Content-Type\": `application/json`\n          }\n        }).then(response => {\n          console.log(response);\n\n          if (response.data.errorCode === 400) {\n            alert(response.data.errorMessage);\n          } else {\n            alert(\"회원가입이 완료되었습니다. 로그인 화면으로 돌아갑니다\");\n            this.$router.push({\n              path: './login'\n            });\n          }\n        }).catch(error => {\n          console.log(error.response);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    linkToLogin() {\n      this.$router.push({\n        path: \"./login\"\n      });\n    }\n    /* toggleAllAgreements() {\r\n     this.agreements.forEach((agreement) => {\r\n       agreement.checked = this.allAgreements;\r\n     });\r\n    },\r\n    registerUser() {\r\n     if (!this.agree) {\r\n       alert('약관에 동의해주세요.');\r\n       return;\r\n     }\r\n     // 회원가입 로직 수행\r\n     */\n\n\n  },\n\n  mounted() {\n    const loginButton = document.querySelector('#navbar-login-button');\n\n    if (loginButton) {\n      loginButton.style.display = 'block';\n    }\n  }\n\n};","map":null,"metadata":{},"sourceType":"module"}